name: Backend Python CI

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./starter/backend
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
        cache-dependency-path: './starter/backend/Pipfile.lock'
    # You can test your matrix by printing the current Python version
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install pipenv
      run: sudo pip install pipenv && sudo pip install flake8
    - name: Install dependencies
      run: pipenv install
    - name: Running linter
      run: pipenv run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./starter/backend
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
        cache-dependency-path: './starter/backend/Pipfile.lock'
    # You can test your matrix by printing the current Python version
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install pipenv
      run: sudo pip install pipenv && sudo pip install flake8
    - name: Install dependencies
      run: pipenv install
    - name: Run the tests
      run: pipenv run test

  build:
    name: Build
    # This line specifies both lint and test jobs as dependencies
    needs: [lint, test]  
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./starter/backend
    steps:
    - uses: actions/checkout@v4
    # Build a Docker image
    - name: Build image
      run: docker build -t ${{ vars.AWS_ECR_REPOSITORY }} .
